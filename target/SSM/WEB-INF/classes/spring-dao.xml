<?xml version="1.0" encoding="UTF8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd">
    <context:component-scan base-package="com.Jiang"/>
    <!--正常读取-->
<!--    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
<!--        <property name="location" value="classpath:db.properties"></property>-->
<!--    </bean>-->
    <!--    <context:annotation-config/>-->
    <!--   <aop:config>-->

    <!--   </aop:config>-->

<!--    写死的方法-->
    <!--    0.关联数据库配置文件-->
<!--    <context:property-placeholder location="classpath:db.properties"/>-->
    <!--1.配置数据源：数据源有非常多，可以使用第三方的，也可使使用Spring的-->
<!--    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">-->
<!--        <property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>-->
<!--        <property name="url" value="jdbc:mysql://localhost:3306/ssmbuild? useSSL=false&amp;useUnicode=true&amp;characterEncoding=utf8&amp;serverTimezone=Asia/Shanghai"/>-->
<!--        <property name="username" value="root"/>-->
<!--        <property name="password" value="123456"/>-->
<!--    </bean>-->

<!--    可以-->
        <!--    0.关联数据库配置文件-->
        <context:property-placeholder location="classpath:db.properties"/>
        <!--1.配置数据源：数据源有非常多，使用spring的数据源,用properties文件读取-->
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="${jdbc.driver}"/>
            <property name="url" value="${jdbc.url}"/>
            <property name="username" value="${jdbc.username}"/>
            <property name="password" value="${jdbc.password}"/>
        </bean>

<!--    &lt;!&ndash;    0.关联数据库配置文件&ndash;&gt;-->
<!--    <context:property-placeholder location="classpath:db.properties"/>-->
<!--    &lt;!&ndash;1.配置数据源：数据源有非常多，使用c3p0的数据源,用properties文件读取&ndash;&gt;-->
<!--    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">-->
<!--        <property name="driverClass" value="${jdbc.driver}"/>-->
<!--        <property name="jdbcUrl" value="${jdbc.url}"/>-->
<!--        <property name="user" value="${jdbc.username}"/>-->
<!--        <property name="password" value="${jdbc.password}"/>-->
<!--    </bean>-->

    <!--2.配置SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--关联Mybatis-->
        <!--        <property name="configLocation" value="classpath:mybatis-config.xml"/>-->
        <property name="typeAliasesPackage" value="com/Jiang/pojo"/>
<!--        xml映射-->
<!--        <property name="mapperLocations" value="classpath:com/Jiang/dao/Book/BookMapper.xml"/>-->
<!--            <array>-->
<!--                <value>classpath*:com/Jiang/dao/Book/BookMapper.xml</value>-->
<!--                <value>classpath*:com/Jiang/dao/User/UserMapper.xml</value>-->
<!--            </array>-->
<!--        </property>-->
<!--        <property name="mapperLocations" value="classpath:com/Jiang/dao/User/UserMapper.xml"/>-->
<!--        多级映射-->
        <property name="mapperLocations">
            <array>
                <value>classpath:com/Jiang/dao/Book/BookMapper.xml</value>
                <value>classpath:com/Jiang/dao/User/UserMapper.xml</value>
            </array>
        </property>
    </bean>

    <!--3.注册sqlSessionTemplate , 关联sqlSessionFactory-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <!--利用构造器注入-->
        <constructor-arg index="0" ref="sqlSessionFactory"/>
    </bean>
    <!-- 4.配置扫描Dao接口包，动态实现Dao接口注入到spring容器中 -->
    <!--解释 ： https://www.cnblogs.com/jpfss/p/7799806.html-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描Dao接口包 -->
        <property name="basePackage" value="com.Jiang.dao.Book,com.Jiang.dao.User"/>
    </bean>

</beans>